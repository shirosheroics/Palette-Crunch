version: "3.7"

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: flask run --host=0.0.0.0
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    networks:
      - apps
    depends_on:
      - database
      - redis

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./frontend:/app
      - ./app/node_modules
    ports:
      - "3000:3000"
    networks:
      - apps

  database:
    container_name: db
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - apps
    restart: unless-stopped

  redis:
    image: redis:6.2-rc
    ports:
      - "6379:6379"
    volumes:
      - data:/home/docker/data
    command: redis-server --appendonly yes
    networks:
      - apps

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - apps
    restart: unless-stopped

networks:
  apps:
    driver: bridge

volumes:
  postgres:
  data:
  pgadmin:
